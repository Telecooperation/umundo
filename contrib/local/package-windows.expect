#!/usr/bin/expect

exp_internal 0

set timeout 600

set UMUNDO_BUILD_HOST $::env(UMUNDO_BUILD_HOST)
set UMUNDO_BUILD_ARCH $::env(UMUNDO_BUILD_ARCH)
set UMUNDO_COMPILER_VER $::env(UMUNDO_COMPILER_VER)
set UMUNDO_VCVARSALL $::env(UMUNDO_VCVARSALL)
set UMUNDO_PROTOBUF_ROOT $::env(UMUNDO_PROTOBUF_ROOT)
# set ANT_BINARY $::env(ANT_BINARY)

set local_prompt {sradomski$ }

#
# Copy JNI files over!
#
eval cd ~/Documents/TK/Code/

eval spawn \
	find ./umundo/package -name *NativeJava* -exec zip -r umundo-bindings.zip \\{\\} \\\;
expect -re $local_prompt

eval spawn \
	sh -c \"find ./umundo/package/* -iname *CSharp* -exec zip -r umundo-bindings.zip \\{\\} \\\\\;\"
expect -re $local_prompt

eval spawn "scp -r umundo-bindings.zip ${UMUNDO_BUILD_HOST}:\\umundo-bindings.zip"
expect eof

eval spawn ping -c1 ${UMUNDO_BUILD_HOST}
expect "cannot resolve"  { puts "Host ${UMUNDO_BUILD_HOST} not found"; exit } \
       eof               { }

set initial_remote_prompt "C*>"
# the default windows prompt is hard to recognize
set remote_prompt ";1Heasy_to_recognize"

##############################
# ssh into remote host

eval spawn ssh -4 sradomski@${UMUNDO_BUILD_HOST}
expect {
	timeout            { puts "Timeout when connecting to windows"; exit;  }
	"The authenticity" { send "yes\n"; exp_continue; }
	-re $local_prompt  { puts "Could not connect to remote host"; exit; }
	-re $initial_remote_prompt { }
}

send "set prompt=easy_to_recognize \r"
expect -re $remote_prompt {  }

send "unzip -q umundo-bindings.zip\r"
expect {
	timeout            { puts "Timeout when unzipping JNIs"; exit;  }
	replace          { puts "REPLACING"; send "A\r"; exp_continue; }
	-re $remote_prompt { puts "SUCCESS"; }
}

send "${UMUNDO_VCVARSALL}\r"
expect -re $remote_prompt

##############################
# package

send "cd %HOMEPATH%\r"
expect -re $remote_prompt
send "rmdir \/S \/Q build-umundo-${UMUNDO_COMPILER_VER}-${UMUNDO_BUILD_ARCH}\r"
expect -re $remote_prompt
send "mkdir build-umundo-${UMUNDO_COMPILER_VER}-${UMUNDO_BUILD_ARCH}\r"
expect -re $remote_prompt
send "cd build-umundo-${UMUNDO_COMPILER_VER}-${UMUNDO_BUILD_ARCH}\r"

expect -re $remote_prompt {
	send "cmake -G \"NMake Makefiles\" \
	-DBUILD_UMUNDO_TOOLS=OFF \
	-DBUILD_UMUNDO_S11N=OFF \
	-DBUILD_UMUNDO_RPC=OFF \
	-DBUILD_UMUNDO_UTIL=OFF \
	-DBUILD_SHARED_LIBS=OFF \
	-DBUILD_BINDINGS=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SHARED_LIBS=OFF \
	-DBUILD_PREFER_STATIC_LIBRARIES=ON \
	-DDIST_PREPARE=ON \
	..\\umundo\r"
}

expect -re $remote_prompt { send "nmake java\r" }
expect "Building CXX" { exp_continue } \
       "Linking CXX" { exp_continue } \
       -re $remote_prompt    { send "\r" }

expect -re $remote_prompt
send "cd %HOMEPATH%\r"
expect -re $remote_prompt
send "rmdir \/S \/Q build-umundo-${UMUNDO_COMPILER_VER}-${UMUNDO_BUILD_ARCH}\r"
expect -re $remote_prompt
send "mkdir build-umundo-${UMUNDO_COMPILER_VER}-${UMUNDO_BUILD_ARCH}\r"
expect -re $remote_prompt
send "cd build-umundo-${UMUNDO_COMPILER_VER}-${UMUNDO_BUILD_ARCH}\r"

expect -re $remote_prompt {
	send "cmake -G \"NMake Makefiles\" \
	-DBUILD_UMUNDO_TOOLS=ON \
	-DBUILD_SHARED_LIBS=OFF \
	-DBUILD_BINDINGS=OFF \
	-DBUILD_TESTS=OFF \
	-DBUILD_SHARED_LIBS=OFF \
	-DBUILD_PREFER_STATIC_LIBRARIES=ON \
	-DPROTOBUF_SRC_ROOT_FOLDER=\"${UMUNDO_PROTOBUF_ROOT}\" \
	-DDIST_PREPARE=ON \
	..\\umundo\r"
}

send "nmake package\r"
expect {
	-re $remote_prompt {}
	"Built target"  { exp_continue; }
	"CPack"  { exp_continue; }
}

##############################
# exit and copy packages

send "exit\r"
expect eof

eval cd ~/Documents/TK/Code/

eval spawn "scp -r ${UMUNDO_BUILD_HOST}:build-umundo-${UMUNDO_COMPILER_VER}-${UMUNDO_BUILD_ARCH}\\\\umundo-windows* umundo/installer/"
expect eof

exit
